'use strict';

const jsonUtility = require('../utils/json-utility');
const domainRegistry = require('../utils/domain-registry');
const lambdaUtils = require('../resource/lambda-utils');

module.exports = {
    localizingCreatedLambdaARN: localizingCreatedLambdaARN
};

function localizingCreatedLambdaARN(lambdaMetaDataList, projectConfigFile, profile) {
    if (!lambdaMetaDataList || lambdaMetaDataList.length === 0) {
        return;
    }
    const projectConfig = jsonUtility.read(projectConfigFile);
    lambdaMetaDataList.forEach((metaData) => {
        if (metaData.customName) {
            return;
        }
        const region = lambdaUtils.getRegionFromAlexaUsage(metaData);
        const domainKey = domainRegistry.getSkillSchemaKey(lambdaUtils.getDomainFromAlexaUsage(metaData));
        const arrayPathToUrl = region === 'default' ?
            ['deploy_settings', profile, 'merge', 'manifest', 'apis', domainKey, 'endpoint', 'uri'] :
            ['deploy_settings', profile, 'merge', 'manifest', 'apis', domainKey, 'regions', region, 'endpoint', 'uri'];
        jsonUtility.insertObjectToObject(projectConfig, arrayPathToUrl, metaData.arn);
    });
    jsonUtility.write(projectConfigFile, projectConfig);
};
