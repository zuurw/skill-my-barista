'use strict';

const apiWrapper = require('../api/api-wrapper');
const deploySkill = require('./deploy-skill');
const CONSTANTS = require('../utils/constants');
const clui = require('clui');

module.exports = {
    enable: enable
};

function enable(skillId, profile, doDebug, callback) {
    let Spinner = clui.Spinner;
    let enablementSpinner = new Spinner(' Enabling the skill...');

    enablementSpinner.start();

    deploySkill.pollingSkillStatus(skillId, profile, doDebug, (response) => {
        if (response.status === CONSTANTS.SKILL.BUILD_STATUS.SUCCESS) {
            if (!skillId) {
                enablementSpinner.stop();
                callback('[Error]: Cannot find skill ID to enable.');
            } else {
                apiWrapper.callEnableSkill(skillId, CONSTANTS.SKILL.STAGE.DEVELOPMENT, profile, doDebug, () => {
                    enablementSpinner.stop();
                    callback();
                });
            }
        } else {
            enablementSpinner.stop();
            callback('[Error]: skill cannot be enabled when status is ' + response.status);
        }
    });
}
